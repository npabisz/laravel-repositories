<?php

namespace DummyNamespace;

use DummyRepositoryNamespace;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class DummyClass extends Controller
{
    /**
     * @param DummyRepositoryContract $DummyRepository
     * @param int $id
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function get(
        DummyRepositoryContract $DummyRepository,
        $id
    ) {
        $model = $DummyRepository->find($id);

        if (null === $model) {
            return response()->json([
                'success' => false,
                'error' => 'Not found',
            ]);
        }

        return response()->json([
            'success' => true,
            'data' => $model->toArray(),
        ]);
    }

    /**
     * @param DummyRepositoryContract $DummyRepository
     * @param Request $request
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function create(
        DummyRepositoryContract $DummyRepository,
        Request $request
    ) {
        $data = $request->all();

        $this->validate($request, [
            DummyModelValidateArray
        ]);

        $model = $DummyRepository->create([
            DummyModelCreateArray
        ]);

        return response()->json([
            'success' => true,
            'data' => [
                'id' => $model->id,
            ],
        ]);
    }

    /**
     * @param DummyRepositoryContract $DummyRepository
     * @param Request $request
     * @param int $id
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(
        DummyRepositoryContract $DummyRepository,
        Request $request,
        $id
    ) {
        $data = $request->all();
        $model = $DummyRepository->find($id);

        if (null === $model) {
            return response()->json([
                'success' => false,
                'error' => 'Not found',
            ]);
        }

        $this->validate($request, [
            DummyModelValidateOptionalArray
        ]);

        $DummyRepository->update($model->id, $data);

        return response()->json([
            'success' => true,
        ]);
    }

    /**
     * @param DummyRepositoryContract $DummyRepository
     * @param int $id
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function delete(
        DummyRepositoryContract $DummyRepository,
        $id
    ) {
        $model = $DummyRepository->find($id);

        if (null === $model) {
            return response()->json([
                'success' => false,
                'error' => 'Not found',
            ]);
        }

        $DummyRepository->delete($model->id);

        return response()->json([
            'success' => true,
        ]);
    }
}
